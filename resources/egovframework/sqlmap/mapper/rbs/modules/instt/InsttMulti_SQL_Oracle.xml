<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
            "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	1. IDX, 테이블명 등 변경해서 사용
	2. 그 외 필요에 따라 쿼리 수정하여 사용 
-->
<mapper namespace="rbs.modules.instt.insttMultiMapper">
	<!-- 테이블명 -->
	<sql id="MULTI_TABLE_NAME">HRD_COM_INSTT_BLOCK</sql>
	
	<select id="nextId" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		SELECT <trim><include refid="rbs.commonDBMSMapper.nullFn"/>(MAX(BLOCK_IDX), 0)</trim> + 1 MAXID
		FROM 
		<include refid="MULTI_TABLE_NAME"/> A
	</select>
	
	<select id="selectList" parameterType="java.util.HashMap" resultType="dataMap">
			SELECT 
			A.*
			FROM 
			<include refid="MULTI_TABLE_NAME"/> A 
			WHERE A.ISDELETE = '0'
			ORDER BY A.INSTT_IDX, A.BLOCK_IDX
	</select>
	
	<select id="selectCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		SELECT COUNT(1) CNT
		FROM 
			<include refid="MULTI_TABLE_NAME"/> A
			WHERE A.ISDELETE = '0'
	</select>
	
	<select id="selectView" parameterType="java.util.HashMap" resultType="dataMap">
			SELECT 
			A.*
			FROM 
			<include refid="MULTI_TABLE_NAME"/> A 
			<include refid="rbs.commonMapper.SELECT_DF_WHERE"/>
	</select>
	<select id="selectOptionList" parameterType="java.util.HashMap" resultType="dataMap">
			<!--PARENT_CLASS_IDX != 0  군구 정보-->
			SELECT 
				CLASS_IDX, MASTER_CODE, CLASS_NAME, PARENT_CLASS_IDX, CLASS_LEVEL, GROUP_CLASS_IDX, ISBLOCK
			FROM
				(
					SELECT
						A.CLASS_IDX, A.MASTER_CODE, A.CLASS_NAME, A.PARENT_CLASS_IDX, A.CLASS_LEVEL, A.GROUP_CLASS_IDX,
						CASE 
			            	WHEN
			            		B.BLOCK_CD IS NOT NULL
			                    THEN CASE
			                    		WHEN
			                    			B.ISDELETE = '0'
			                    			THEN '1'
			                    			ELSE '0'
			                    	 END
			                    ELSE '0'
			            END AS ISBLOCK,
			            CASE
			            	WHEN
			            		B.BLOCK_CD IS NOT NULL
			            		THEN ROW_NUMBER() OVER(PARTITION BY B.BLOCK_CD ORDER BY B.BLOCK_CD, B.REGI_DATE DESC)
			            		ELSE 1
			            END AS RN
					FROM
						RBS_ICLASS_INFO A
						LEFT JOIN HRD_COM_INSTT_BLOCK B ON A.CLASS_IDX = B.BLOCK_CD
					WHERE
						A.MASTER_CODE = 'SIDO_SIGUNGU'
			            AND   A.PARENT_CLASS_IDX != '0'
			        ORDER BY 
			            CLASS_IDX ASC
			) C
			WHERE C.RN = 1
			UNION ALL
			<!-- PARENT_CLASS_IDX = 0 시 정보 -->
			SELECT
			    C.CLASS_IDX, C.MASTER_CODE, C.CLASS_NAME, C.PARENT_CLASS_IDX, C.CLASS_LEVEL, C.GROUP_CLASS_IDX,
			<!-- 시가 가지고있는 전체 군구의 갯수 와 BLOCK_CD가 시로 시작하는(like) 군구의 갯수를 비교하여 같으면 1(시의 군구가 다 잡혀있음) 다르면 0(시의 군구가 다 안잡혀있음) -->
			    CASE 
			    	WHEN 
			    		(
			    			SELECT 
			    				COUNT(*) 
			    			FROM 
			    				RBS_ICLASS_INFO
			                WHERE 
			                	PARENT_CLASS_IDX = C.CLASS_IDX
			                	AND   MASTER_CODE = #{MASTER_CODE}
			                ) = 
			              (
			              	SELECT 
			              		COUNT(*) 
			              	FROM 
			              		<include refid="MULTI_TABLE_NAME"/>
			               	WHERE 
			               		BLOCK_CD LIKE C.CLASS_IDX || '%' 
			               		AND   ISDELETE = '0'
			               	) 
			        	THEN '1'
			        	ELSE '0'
			    END AS ISBLOCK
			FROM
			    RBS_ICLASS_INFO C
			    LEFT JOIN <include refid="MULTI_TABLE_NAME"/> D ON C.CLASS_IDX = D.BLOCK_CD
			WHERE
			    C.MASTER_CODE = #{MASTER_CODE}
			<!-- 부모(시)가 0인 데이터 == 시도 -->    
			AND C.PARENT_CLASS_IDX = '0'
			GROUP BY 
				C.CLASS_IDX, C.MASTER_CODE, C.CLASS_NAME, C.PARENT_CLASS_IDX, C.CLASS_LEVEL, C.GROUP_CLASS_IDX
			ORDER BY 
				CLASS_IDX ASC
	</select>
	<insert id="insert" parameterType="java.util.HashMap">
		INSERT INTO <include refid="MULTI_TABLE_NAME"/> (
			<include refid="rbs.commonMapper.INSERT_COLUMNS"/>
			, REGI_DATE, LAST_MODI_DATE
		) VALUES (
			<include refid="rbs.commonMapper.INSERT_VALUES"/>
			, <include refid="rbs.commonDBMSMapper.currentDate"/>, <include refid="rbs.commonDBMSMapper.currentDate"/>
		)
	</insert>
	
	<update id="update" parameterType="java.util.HashMap">
		UPDATE <include refid="MULTI_TABLE_NAME"/> SET 
		<include refid="rbs.commonMapper.UPDATE_SET"/>
		<include refid="rbs.commonMapper.COM_SG_WHERE"/>
		AND INSTT_IDX = #{INSTT_IDX}
	</update>
	
	<update id="delete" parameterType="java.util.HashMap">
		UPDATE <include refid="MULTI_TABLE_NAME"/> SET ISDELETE = '1', LAST_MODI_DATE = <include refid="rbs.commonDBMSMapper.currentDate"/>  
		<include refid="rbs.commonDBMSMapper.UPDATE_ADD_SET"/>
		<include refid="rbs.commonMapper.COM_SG_WHERE"/>
	</update>
	
	<update id="restore" parameterType="java.util.HashMap">
		UPDATE <include refid="MULTI_TABLE_NAME"/> SET ISDELETE = '0', LAST_MODI_DATE = <include refid="rbs.commonDBMSMapper.currentDate"/>  
		<include refid="rbs.commonDBMSMapper.UPDATE_ADD_SET"/>
		<include refid="rbs.commonMapper.COM_SG_WHERE"/>
	</update>
	
	<delete id="cdelete" parameterType="java.util.HashMap">
		DELETE FROM <include refid="MULTI_TABLE_NAME"/>  
		WHERE INSTT_IDX = #{INSTT_IDX}
		<include refid="rbs.commonMapper.COM_LK_WHERE"/>
	</delete>
</mapper>            